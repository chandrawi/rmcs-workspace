# build cargo chef tool
FROM rust:slim-bookworm AS chef
RUN cargo install cargo-chef --locked
WORKDIR app

# create recipe
FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

# build dependency based on recipe
FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json
RUN cargo chef cook --release --recipe-path recipe.json
# build the application
RUN apt-get update && apt-get install -y protobuf-compiler
COPY . .
RUN cargo build --release --bin auth_server
RUN cargo build --release --bin resource_server

# create application runtime image without rust toolchain
FROM debian:bookworm-slim AS runtime
WORKDIR app
RUN apt-get update && apt-get install -y iproute2
COPY --from=builder /app/target/release/auth_server /usr/local/bin
COPY --from=builder /app/target/release/resource_server /usr/local/bin
COPY ./docker/start_servers.sh start_servers.sh
RUN chmod +x /app/start_servers.sh
ENTRYPOINT ["/app/start_servers.sh"]
